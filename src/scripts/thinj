#!/bin/sh

# my example: thinj -c bin -o exiaload thinj.regression.exceptions.ExIALOAD

if [ "$THINJ_HOME" = "" ]; then
    echo "Env. var. THINJ_HOME is not defined."  
    exit 1    
fi

usage() {
    echo "usage: $0 [ -c <class path> ] [ -d <dependency file> ] -o <output name> <main file>"
    echo "  - where:" 
    echo "    * <class path> is an optional ':' - separated list of directories"
    echo "    * <dependency file> is an optional file containing a list of dependencies, one at each line"
    echo "    * <output name> is a mandatory filename to be used when generating misc. output files"
    echo "    * <main class> is a mandatory main class."
    echo 
    echo "Example:"
    echo "  $0 -c bin -o generated org.example.Main"
    echo "  - This will assume that input class files shall be found in 'bin' and it will use"
    echo "    org.example.Main as the entry point for the program. The output files will all"
    echo "    be prefixed with generated."
    echo
    exit 1
}


while getopts "c:o:d:" optionName
do
    case "$optionName" in
        c) classPath="$OPTARG";;
        o) outputName="$OPTARG";;
        d) DEPENDENCY_FILE="$OPTARG";;
#        x) DEPENDENCY_FILE="$OPTARG";;
        [?]) usage $0;;
    esac
done

shift `expr $OPTIND \- 1`

#DEP=-Ddependencies=/home/hammer/workspace/thinj/src/thinj/regression/regression.dep


# Dependency file is optional:
DEP="-Ddependencies=$DEPENDENCY_FILE"

# Class path is optionaly:
MYCP="-Dmycp=$classPath:$THINJ_HOME/lib/thinjrt.jar"

if [ "$outputName" = "" ]; then
    usage
fi

OUT=-Dout=$outputName

if [ $# -eq 0 ]; then
    usage
fi

java -cp $THINJ_HOME/lib/thinj.jar:$CLASSPATH $MYCP $DEP $OUT thinj.NewLinker $1 || exit 1 

gcc -o $outputName -pg -I$THINJ_HOME/inc  -L$THINJ_HOME/lib  $outputName.c -l thinjvm 